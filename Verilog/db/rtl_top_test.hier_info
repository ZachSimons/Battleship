|rtl_top_test
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => sys_clk.IN1
HEX0[0] << rtl_top:u_rtl_top.HEX0
HEX0[1] << rtl_top:u_rtl_top.HEX0
HEX0[2] << rtl_top:u_rtl_top.HEX0
HEX0[3] << rtl_top:u_rtl_top.HEX0
HEX0[4] << rtl_top:u_rtl_top.HEX0
HEX0[5] << rtl_top:u_rtl_top.HEX0
HEX0[6] << rtl_top:u_rtl_top.HEX0
HEX1[0] << rtl_top:u_rtl_top.HEX1
HEX1[1] << rtl_top:u_rtl_top.HEX1
HEX1[2] << rtl_top:u_rtl_top.HEX1
HEX1[3] << rtl_top:u_rtl_top.HEX1
HEX1[4] << rtl_top:u_rtl_top.HEX1
HEX1[5] << rtl_top:u_rtl_top.HEX1
HEX1[6] << rtl_top:u_rtl_top.HEX1
HEX2[0] << rtl_top:u_rtl_top.HEX2
HEX2[1] << rtl_top:u_rtl_top.HEX2
HEX2[2] << rtl_top:u_rtl_top.HEX2
HEX2[3] << rtl_top:u_rtl_top.HEX2
HEX2[4] << rtl_top:u_rtl_top.HEX2
HEX2[5] << rtl_top:u_rtl_top.HEX2
HEX2[6] << rtl_top:u_rtl_top.HEX2
HEX3[0] << rtl_top:u_rtl_top.HEX3
HEX3[1] << rtl_top:u_rtl_top.HEX3
HEX3[2] << rtl_top:u_rtl_top.HEX3
HEX3[3] << rtl_top:u_rtl_top.HEX3
HEX3[4] << rtl_top:u_rtl_top.HEX3
HEX3[5] << rtl_top:u_rtl_top.HEX3
HEX3[6] << rtl_top:u_rtl_top.HEX3
HEX4[0] << rtl_top:u_rtl_top.HEX4
HEX4[1] << rtl_top:u_rtl_top.HEX4
HEX4[2] << rtl_top:u_rtl_top.HEX4
HEX4[3] << rtl_top:u_rtl_top.HEX4
HEX4[4] << rtl_top:u_rtl_top.HEX4
HEX4[5] << rtl_top:u_rtl_top.HEX4
HEX4[6] << rtl_top:u_rtl_top.HEX4
HEX5[0] << rtl_top:u_rtl_top.HEX5
HEX5[1] << rtl_top:u_rtl_top.HEX5
HEX5[2] << rtl_top:u_rtl_top.HEX5
HEX5[3] << rtl_top:u_rtl_top.HEX5
HEX5[4] << rtl_top:u_rtl_top.HEX5
HEX5[5] << rtl_top:u_rtl_top.HEX5
HEX5[6] << rtl_top:u_rtl_top.HEX5
KEY[0] => rst_n.IN2
KEY[1] => KEY[1].IN1
KEY[2] => KEY[2].IN1
KEY[3] => KEY[3].IN1
LEDR[0] << rtl_top:u_rtl_top.LEDR
LEDR[1] << rtl_top:u_rtl_top.LEDR
LEDR[2] << rtl_top:u_rtl_top.LEDR
LEDR[3] << rtl_top:u_rtl_top.LEDR
LEDR[4] << rtl_top:u_rtl_top.LEDR
LEDR[5] << rtl_top:u_rtl_top.LEDR
LEDR[6] << rtl_top:u_rtl_top.LEDR
LEDR[7] << rtl_top:u_rtl_top.LEDR
LEDR[8] << rtl_top:u_rtl_top.LEDR
LEDR[9] << rtl_top:u_rtl_top.LEDR
PS2_CLK <> rtl_top:u_rtl_top.PS2_CLK
PS2_CLK2 <> rtl_top:u_rtl_top.PS2_CLK2
PS2_DAT <> rtl_top:u_rtl_top.PS2_DAT
PS2_DAT2 <> rtl_top:u_rtl_top.PS2_DAT2
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => SW[6].IN1
SW[7] => SW[7].IN1
SW[8] => SW[8].IN1
SW[9] => SW[9].IN1
VGA_BLANK_N << rtl_top:u_rtl_top.VGA_BLANK_N
VGA_B[0] << rtl_top:u_rtl_top.VGA_B
VGA_B[1] << rtl_top:u_rtl_top.VGA_B
VGA_B[2] << rtl_top:u_rtl_top.VGA_B
VGA_B[3] << rtl_top:u_rtl_top.VGA_B
VGA_B[4] << rtl_top:u_rtl_top.VGA_B
VGA_B[5] << rtl_top:u_rtl_top.VGA_B
VGA_B[6] << rtl_top:u_rtl_top.VGA_B
VGA_B[7] << rtl_top:u_rtl_top.VGA_B
VGA_CLK << rtl_top:u_rtl_top.VGA_CLK
VGA_G[0] << rtl_top:u_rtl_top.VGA_G
VGA_G[1] << rtl_top:u_rtl_top.VGA_G
VGA_G[2] << rtl_top:u_rtl_top.VGA_G
VGA_G[3] << rtl_top:u_rtl_top.VGA_G
VGA_G[4] << rtl_top:u_rtl_top.VGA_G
VGA_G[5] << rtl_top:u_rtl_top.VGA_G
VGA_G[6] << rtl_top:u_rtl_top.VGA_G
VGA_G[7] << rtl_top:u_rtl_top.VGA_G
VGA_HS << rtl_top:u_rtl_top.VGA_HS
VGA_R[0] << rtl_top:u_rtl_top.VGA_R
VGA_R[1] << rtl_top:u_rtl_top.VGA_R
VGA_R[2] << rtl_top:u_rtl_top.VGA_R
VGA_R[3] << rtl_top:u_rtl_top.VGA_R
VGA_R[4] << rtl_top:u_rtl_top.VGA_R
VGA_R[5] << rtl_top:u_rtl_top.VGA_R
VGA_R[6] << rtl_top:u_rtl_top.VGA_R
VGA_R[7] << rtl_top:u_rtl_top.VGA_R
VGA_SYNC_N << rtl_top:u_rtl_top.VGA_SYNC_N
VGA_VS << rtl_top:u_rtl_top.VGA_VS
GPIO[0] <> rtl_top:u_rtl_top.GPIO
GPIO[1] <> rtl_top:u_rtl_top.GPIO
GPIO[2] <> rtl_top:u_rtl_top.GPIO
GPIO[3] <> rtl_top:u_rtl_top.GPIO
GPIO[4] <> rtl_top:u_rtl_top.GPIO
GPIO[5] <> rtl_top:u_rtl_top.GPIO
GPIO[6] <> rtl_top:u_rtl_top.GPIO
GPIO[7] <> rtl_top:u_rtl_top.GPIO
GPIO[8] <> rtl_top:u_rtl_top.GPIO
GPIO[9] <> rtl_top:u_rtl_top.GPIO
GPIO[10] <> rtl_top:u_rtl_top.GPIO
GPIO[11] <> rtl_top:u_rtl_top.GPIO
GPIO[12] <> rtl_top:u_rtl_top.GPIO
GPIO[13] <> rtl_top:u_rtl_top.GPIO
GPIO[14] <> rtl_top:u_rtl_top.GPIO
GPIO[15] <> rtl_top:u_rtl_top.GPIO
GPIO[16] <> rtl_top:u_rtl_top.GPIO
GPIO[17] <> rtl_top:u_rtl_top.GPIO
GPIO[18] <> rtl_top:u_rtl_top.GPIO
GPIO[19] <> rtl_top:u_rtl_top.GPIO
GPIO[20] <> rtl_top:u_rtl_top.GPIO
GPIO[21] <> rtl_top:u_rtl_top.GPIO
GPIO[22] <> rtl_top:u_rtl_top.GPIO
GPIO[23] <> rtl_top:u_rtl_top.GPIO
GPIO[24] <> rtl_top:u_rtl_top.GPIO
GPIO[25] <> rtl_top:u_rtl_top.GPIO
GPIO[26] <> rtl_top:u_rtl_top.GPIO
GPIO[27] <> rtl_top:u_rtl_top.GPIO
GPIO[28] <> rtl_top:u_rtl_top.GPIO
GPIO[29] <> rtl_top:u_rtl_top.GPIO
GPIO[30] <> rtl_top:u_rtl_top.GPIO
GPIO[31] <> rtl_top:u_rtl_top.GPIO
GPIO[32] <> rtl_top:u_rtl_top.GPIO
GPIO[33] <> rtl_top:u_rtl_top.GPIO
GPIO[34] <> rtl_top:u_rtl_top.GPIO
GPIO[35] <> rtl_top:u_rtl_top.GPIO


|rtl_top_test|rtl_top:u_rtl_top
sys_clk => key_ff3.CLK
sys_clk => key_ff2.CLK
sys_clk => key_ff.CLK
sys_clk => interrupt_board_ff[0].CLK
sys_clk => interrupt_board_ff[1].CLK
sys_clk => interrupt_board_ff[2].CLK
sys_clk => interrupt_board_ff[3].CLK
sys_clk => interrupt_board_ff[4].CLK
sys_clk => interrupt_board_ff[5].CLK
sys_clk => interrupt_board_ff[6].CLK
sys_clk => interrupt_board_ff[7].CLK
sys_clk => interrupt_board_ff[8].CLK
sys_clk => interrupt_board_ff[9].CLK
sys_clk => interrupt_board_ff[10].CLK
sys_clk => interrupt_board_ff[11].CLK
sys_clk => interrupt_board_ff[12].CLK
sys_clk => interrupt_board_ff[13].CLK
sys_clk => interrupt_board_ff[14].CLK
sys_clk => interrupt_board_ff[15].CLK
sys_clk => interrupt_board_ff[16].CLK
sys_clk => interrupt_board_ff[17].CLK
sys_clk => interrupt_board_ff[18].CLK
sys_clk => interrupt_board_ff[19].CLK
sys_clk => interrupt_board_ff[20].CLK
sys_clk => interrupt_board_ff[21].CLK
sys_clk => interrupt_board_ff[22].CLK
sys_clk => interrupt_board_ff[23].CLK
rst_n => rst_n.IN1
KEY[0] => ~NO_FANOUT~
KEY[1] => key_ff.DATAA
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => SW[0].IN3
SW[1] => SW[1].IN3
SW[2] => SW[2].IN3
SW[3] => SW[3].IN3
SW[4] => SW[4].IN3
SW[5] => SW[5].IN3
SW[6] => SW[6].IN3
SW[7] => SW[7].IN3
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
LEDR[0] <= <VCC>
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
PS2_CLK <> <UNC>
PS2_CLK2 <> <UNC>
PS2_DAT <> <UNC>
PS2_DAT2 <> <UNC>
VGA_BLANK_N <= <GND>
VGA_B[0] <= <GND>
VGA_B[1] <= <GND>
VGA_B[2] <= <GND>
VGA_B[3] <= <GND>
VGA_B[4] <= <GND>
VGA_B[5] <= <GND>
VGA_B[6] <= <GND>
VGA_B[7] <= <GND>
VGA_CLK <= <GND>
VGA_G[0] <= <GND>
VGA_G[1] <= <GND>
VGA_G[2] <= <GND>
VGA_G[3] <= <GND>
VGA_G[4] <= <GND>
VGA_G[5] <= <GND>
VGA_G[6] <= <GND>
VGA_G[7] <= <GND>
VGA_HS <= <GND>
VGA_R[0] <= <GND>
VGA_R[1] <= <GND>
VGA_R[2] <= <GND>
VGA_R[3] <= <GND>
VGA_R[4] <= <GND>
VGA_R[5] <= <GND>
VGA_R[6] <= <GND>
VGA_R[7] <= <GND>
VGA_SYNC_N <= <GND>
VGA_VS <= <GND>
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> spart_top:spart_top_i.txd
GPIO[4] <> <UNC>
GPIO[5] <> spart_top:spart_top_i.rxd
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> <UNC>
GPIO[35] <> <UNC>
HEX0[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[0] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] <= WideOr20.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= WideOr19.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= WideOr17.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= WideOr16.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= WideOr15.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= WideOr14.DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] <= WideOr27.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= WideOr26.DB_MAX_OUTPUT_PORT_TYPE
HEX3[2] <= WideOr25.DB_MAX_OUTPUT_PORT_TYPE
HEX3[3] <= WideOr24.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= WideOr23.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= WideOr22.DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] <= WideOr21.DB_MAX_OUTPUT_PORT_TYPE
HEX4[0] <= WideOr34.DB_MAX_OUTPUT_PORT_TYPE
HEX4[1] <= WideOr33.DB_MAX_OUTPUT_PORT_TYPE
HEX4[2] <= WideOr32.DB_MAX_OUTPUT_PORT_TYPE
HEX4[3] <= WideOr31.DB_MAX_OUTPUT_PORT_TYPE
HEX4[4] <= WideOr30.DB_MAX_OUTPUT_PORT_TYPE
HEX4[5] <= WideOr29.DB_MAX_OUTPUT_PORT_TYPE
HEX4[6] <= WideOr28.DB_MAX_OUTPUT_PORT_TYPE
HEX5[0] <= WideOr41.DB_MAX_OUTPUT_PORT_TYPE
HEX5[1] <= WideOr40.DB_MAX_OUTPUT_PORT_TYPE
HEX5[2] <= WideOr39.DB_MAX_OUTPUT_PORT_TYPE
HEX5[3] <= WideOr38.DB_MAX_OUTPUT_PORT_TYPE
HEX5[4] <= WideOr37.DB_MAX_OUTPUT_PORT_TYPE
HEX5[5] <= WideOr36.DB_MAX_OUTPUT_PORT_TYPE
HEX5[6] <= WideOr35.DB_MAX_OUTPUT_PORT_TYPE


|rtl_top_test|rtl_top:u_rtl_top|spart_top:spart_top_i
clk => clk.IN1
rst_n => rst_n.IN1
send_tx => always1.IN1
tx_data[0] => tx_shift_reg.DATAB
tx_data[1] => tx_shift_reg.DATAB
tx_data[2] => tx_shift_reg.DATAB
tx_data[3] => tx_shift_reg.DATAB
tx_data[4] => tx_shift_reg.DATAB
tx_data[5] => tx_shift_reg.DATAB
tx_data[6] => tx_shift_reg.DATAB
tx_data[7] => tx_shift_reg.DATAB
tx_data[8] => tx_shift_reg.DATAB
tx_data[9] => tx_shift_reg.DATAB
tx_data[10] => tx_shift_reg.DATAB
tx_data[11] => tx_shift_reg.DATAB
tx_data[12] => tx_shift_reg.DATAB
tx_data[13] => tx_shift_reg.DATAB
tx_data[14] => tx_shift_reg.DATAB
tx_data[15] => tx_shift_reg.DATAB
tx_data[16] => tx_shift_reg.DATAB
tx_data[17] => tx_shift_reg.DATAB
tx_data[18] => tx_shift_reg.DATAB
tx_data[19] => tx_shift_reg.DATAB
tx_data[20] => tx_shift_reg.DATAB
tx_data[21] => tx_shift_reg.DATAB
tx_data[22] => tx_shift_reg.DATAB
tx_data[23] => tx_shift_reg.DATAB
rxd => rxd.IN1
txd <= spart:spart_i.txd
interrupt_board <= WideAnd0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_shift_reg[0][0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_shift_reg[0][1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_shift_reg[0][2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_shift_reg[1][0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_shift_reg[1][1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_shift_reg[1][2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_shift_reg[2][0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_shift_reg[2][1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[8] <= rx_shift_reg[2][2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[9] <= rx_shift_reg[3][0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[10] <= rx_shift_reg[3][1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[11] <= rx_shift_reg[3][2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[12] <= rx_shift_reg[4][0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[13] <= rx_shift_reg[4][1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[14] <= rx_shift_reg[4][2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[15] <= rx_shift_reg[5][0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[16] <= rx_shift_reg[5][1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[17] <= rx_shift_reg[5][2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[18] <= rx_shift_reg[6][0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[19] <= rx_shift_reg[6][1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[20] <= rx_shift_reg[6][2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[21] <= rx_shift_reg[7][0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[22] <= rx_shift_reg[7][1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[23] <= rx_shift_reg[7][2].DB_MAX_OUTPUT_PORT_TYPE


|rtl_top_test|rtl_top:u_rtl_top|spart_top:spart_top_i|spart:spart_i
clk => en.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => r_start.CLK
clk => r_cnt[0].CLK
clk => r_cnt[1].CLK
clk => r_cnt[2].CLK
clk => r_cnt[3].CLK
clk => r_cnt[4].CLK
clk => recieve[0].CLK
clk => recieve[1].CLK
clk => recieve[2].CLK
clk => recieve[3].CLK
clk => recieve[4].CLK
clk => recieve[5].CLK
clk => recieve[6].CLK
clk => recieve[7].CLK
clk => recieve[8].CLK
clk => rda~reg0.CLK
clk => t_start.CLK
clk => tx_data_reg[0].CLK
clk => tx_data_reg[1].CLK
clk => tx_data_reg[2].CLK
clk => tx_data_reg[3].CLK
clk => tx_data_reg[4].CLK
clk => tx_data_reg[5].CLK
clk => tx_data_reg[6].CLK
clk => tx_data_reg[7].CLK
clk => tbr~reg0.CLK
clk => t_cnt[0].CLK
clk => t_cnt[1].CLK
clk => t_cnt[2].CLK
clk => t_cnt[3].CLK
clk => t_cnt[4].CLK
clk => transmit[0].CLK
clk => transmit[1].CLK
clk => transmit[2].CLK
clk => transmit[3].CLK
clk => transmit[4].CLK
clk => transmit[5].CLK
clk => transmit[6].CLK
clk => transmit[7].CLK
clk => transmit[8].CLK
rst_n => transmit.OUTPUTSELECT
rst_n => transmit.OUTPUTSELECT
rst_n => transmit.OUTPUTSELECT
rst_n => transmit.OUTPUTSELECT
rst_n => transmit.OUTPUTSELECT
rst_n => transmit.OUTPUTSELECT
rst_n => transmit.OUTPUTSELECT
rst_n => transmit.OUTPUTSELECT
rst_n => transmit.OUTPUTSELECT
rst_n => t_cnt.OUTPUTSELECT
rst_n => t_cnt.OUTPUTSELECT
rst_n => t_cnt.OUTPUTSELECT
rst_n => t_cnt.OUTPUTSELECT
rst_n => t_cnt.OUTPUTSELECT
rst_n => tbr.OUTPUTSELECT
rst_n => tx_data_reg.OUTPUTSELECT
rst_n => tx_data_reg.OUTPUTSELECT
rst_n => tx_data_reg.OUTPUTSELECT
rst_n => tx_data_reg.OUTPUTSELECT
rst_n => tx_data_reg.OUTPUTSELECT
rst_n => tx_data_reg.OUTPUTSELECT
rst_n => tx_data_reg.OUTPUTSELECT
rst_n => tx_data_reg.OUTPUTSELECT
rst_n => t_start.OUTPUTSELECT
rst_n => rda.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => recieve.OUTPUTSELECT
rst_n => r_cnt.OUTPUTSELECT
rst_n => r_cnt.OUTPUTSELECT
rst_n => r_cnt.OUTPUTSELECT
rst_n => r_cnt.OUTPUTSELECT
rst_n => r_cnt.OUTPUTSELECT
rst_n => r_start.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => en.OUTPUTSELECT
send_tx => always0.IN1
tx_data[0] => tx_data_reg.DATAB
tx_data[1] => tx_data_reg.DATAB
tx_data[2] => tx_data_reg.DATAB
tx_data[3] => tx_data_reg.DATAB
tx_data[4] => tx_data_reg.DATAB
tx_data[5] => tx_data_reg.DATAB
tx_data[6] => tx_data_reg.DATAB
tx_data[7] => tx_data_reg.DATAB
rx_data[0] <= recieve[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= recieve[1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= recieve[2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= recieve[3].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= recieve[4].DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= recieve[5].DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= recieve[6].DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= recieve[7].DB_MAX_OUTPUT_PORT_TYPE
rda <= rda~reg0.DB_MAX_OUTPUT_PORT_TYPE
txd <= transmit[0].DB_MAX_OUTPUT_PORT_TYPE
rxd => recieve.DATAB
rxd => always1.IN1
tbr <= tbr~reg0.DB_MAX_OUTPUT_PORT_TYPE


