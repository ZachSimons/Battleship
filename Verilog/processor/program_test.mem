12345c97   // AUIPC x25, 0x12345   (x25 = 2 + (0x12345 << 12) = 0x12345002 when PC = 2)
00100093   // ADDI x1,x1,1
00200113   // ADDI x2,x2,2
002081B3   // ADD x3,x1,x2     (x3 = 1 + 2)
40208233   // SUB x4,x1,x2     (x4 = 1 - 2)
0020e2b3   // OR x5,x1,x2     (x5 = 1 | 2 = 3)
00a0a193   // SLTI x3, x1, 10    (x3 = (1 < 10)?1:0)
00a0b213   // SLTIU x4, x1, 10   (x4 = (1 < 10)?1:0 unsigned)
0ff0c293   // XORI x5, x1, 0xFF  (x5 = 1 ^ 0xFF  = 0xFE)
abc0e313   // ORI x6, x1, 0xABC (x6 = 1 | 0xABC = 0xABC)
00f0f393   // ANDI x7, x1, 0xF   (x7 = 1 & 0xF   = 1)
00209413   // SLLI x8, x1, 2     (x8 = 1 << 2    = 4)
0010d493   // SRLI x9, x1, 1     (x9 = 1 >>u 1   = 0)
4010d513   // SRAI x10, x1, 1    (x10 = 1 >>s 1  = 0)
002091B3   // SLL x3, x1, x2     (x3 = 1 << 2 = 4)
0020A233   // SLT x4, x1, x2     (x4 = (1 < 2)?1:0 = 1)
0020B2B3   // SLTU x5, x1, x2    (x5 = (1 < 2)?1:0 = 1, unsigned)
0020C333   // XOR x6, x1, x2     (x6 = 1 ^ 2 = 3)
0020D3B3   // SRL x7, x1, x2     (x7 = 1 >>u 2 = 0)
4020D433   // SRA x8, x1, x2     (x8 = 1 >>s 2 = 0, sign-extended)
0020E4B3   // OR x9, x1, x2      (x9 = 1 | 2 = 3)
0020F533   // AND x10, x1, x2    (x10 = 1 & 2 = 0)
deadc5b7   // LUI x11, DEADC
eef58593   // ADDI x11, x11, EEF
00b10123   // SB x11, 2(x2)          
00b11223   // SH x11, 4(x2)
00b12323   // SW x11, 6(x2)
00210603   // LB x3, 2(x2)
00411683   // LH x4, 4(x2)
00612703   // LW x5, 6(x2)
000707b3   // ADD x15, x14, x0