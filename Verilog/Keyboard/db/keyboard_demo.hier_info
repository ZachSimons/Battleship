|keyboard_demo
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => ~NO_FANOUT~
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] <= <GND>
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= keyboard:key.done
LEDR[7] <= keyboard:key.fire
LEDR[8] <= keyboard:key.direction
LEDR[9] <= keyboard:key.direction
PS2_CLK <> keyboard:key.ps_clk
PS2_CLK2 <> <UNC>
PS2_DAT <> keyboard:key.ps_data
PS2_DAT2 <> <UNC>
VGA_BLANK_N <= <GND>
VGA_B[0] <= <GND>
VGA_B[1] <= <GND>
VGA_B[2] <= <GND>
VGA_B[3] <= <GND>
VGA_B[4] <= <GND>
VGA_B[5] <= <GND>
VGA_B[6] <= <GND>
VGA_B[7] <= <GND>
VGA_CLK <= <GND>
VGA_G[0] <= <GND>
VGA_G[1] <= <GND>
VGA_G[2] <= <GND>
VGA_G[3] <= <GND>
VGA_G[4] <= <GND>
VGA_G[5] <= <GND>
VGA_G[6] <= <GND>
VGA_G[7] <= <GND>
VGA_HS <= <GND>
VGA_R[0] <= <GND>
VGA_R[1] <= <GND>
VGA_R[2] <= <GND>
VGA_R[3] <= <GND>
VGA_R[4] <= <GND>
VGA_R[5] <= <GND>
VGA_R[6] <= <GND>
VGA_R[7] <= <GND>
VGA_SYNC_N <= <GND>
VGA_VS <= <GND>


|keyboard_demo|keyboard:key
rst_n => shift_reg[1][1].ACLR
rst_n => shift_reg[1][2].ACLR
rst_n => shift_reg[1][3].ACLR
rst_n => shift_reg[1][4].ACLR
rst_n => shift_reg[1][5].ACLR
rst_n => shift_reg[1][6].ACLR
rst_n => shift_reg[1][7].ACLR
rst_n => shift_reg[1][8].ACLR
rst_n => shift_reg[1][9].ACLR
rst_n => shift_reg[1][10].ACLR
rst_n => shift_reg[0][1].ACLR
rst_n => shift_reg[0][2].ACLR
rst_n => shift_reg[0][3].ACLR
rst_n => shift_reg[0][4].ACLR
rst_n => shift_reg[0][5].ACLR
rst_n => shift_reg[0][6].ACLR
rst_n => shift_reg[0][7].ACLR
rst_n => shift_reg[0][8].ACLR
rst_n => shift_reg[0][9].ACLR
rst_n => shift_reg[0][10].ACLR
rst_n => count[0].ACLR
rst_n => count[1].ACLR
rst_n => count[2].ACLR
rst_n => count[3].ACLR
rst_n => count[4].ACLR
ps_clk => shift_reg[1][1].CLK
ps_clk => shift_reg[1][2].CLK
ps_clk => shift_reg[1][3].CLK
ps_clk => shift_reg[1][4].CLK
ps_clk => shift_reg[1][5].CLK
ps_clk => shift_reg[1][6].CLK
ps_clk => shift_reg[1][7].CLK
ps_clk => shift_reg[1][8].CLK
ps_clk => shift_reg[1][9].CLK
ps_clk => shift_reg[1][10].CLK
ps_clk => shift_reg[0][1].CLK
ps_clk => shift_reg[0][2].CLK
ps_clk => shift_reg[0][3].CLK
ps_clk => shift_reg[0][4].CLK
ps_clk => shift_reg[0][5].CLK
ps_clk => shift_reg[0][6].CLK
ps_clk => shift_reg[0][7].CLK
ps_clk => shift_reg[0][8].CLK
ps_clk => shift_reg[0][9].CLK
ps_clk => shift_reg[0][10].CLK
ps_clk => count[0].CLK
ps_clk => count[1].CLK
ps_clk => count[2].CLK
ps_clk => count[3].CLK
ps_clk => count[4].CLK
ps_data => shift_reg[0][10].DATAIN
ps_data => shift_reg[1][10].DATAIN
direction[0] <= direction.DB_MAX_OUTPUT_PORT_TYPE
direction[1] <= direction.DB_MAX_OUTPUT_PORT_TYPE
fire <= fire.DB_MAX_OUTPUT_PORT_TYPE
done <= done.DB_MAX_OUTPUT_PORT_TYPE


