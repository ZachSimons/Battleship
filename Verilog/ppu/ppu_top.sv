
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module ppu_top (
    //////////// CLOCK //////////
    input  logic        sys_clk,
    input  logic        rst_n,

    input  logic        receive,
    input  logic [31:0] ppu_data,
    //////////// VGA //////////
    output logic        VGA_BLANK_N,
    output logic [7:0]  VGA_B,
    output logic        VGA_CLK,
    output logic [7:0]  VGA_G,
    output logic        VGA_HS,
    output logic [7:0]  VGA_R,
    output logic        VGA_SYNC_N,
    output logic        VGA_VS
);

/*
logic [9:0] cmd_index;
logic [16:0] ppu_cmds [0:35];

assign cmd_index = ppu_data;



assign ppu_cmds[0] = {1'b1, 7'd25, 2'b11, 2'b00, 3'd0, 1'b0, 1'b0};
assign ppu_cmds[1] = {1'b1, 7'd26, 2'b11, 2'b00, 3'd1, 1'b0, 1'b0};

// ship 2 ver
assign ppu_cmds[2] = {1'b1, 7'd27, 2'b11, 2'b00, 3'd0, 1'b1, 1'b0};
assign ppu_cmds[3] = {1'b1, 7'd37, 2'b11, 2'b00, 3'd1, 1'b1, 1'b0};

// ship 3 hor
assign ppu_cmds[4] = {1'b1, 7'd42, 2'b11, 2'b01, 3'd0, 1'b0, 1'b0};
assign ppu_cmds[5] = {1'b1, 7'd43, 2'b11, 2'b01, 3'd1, 1'b0, 1'b0};
assign ppu_cmds[6] = {1'b1, 7'd44, 2'b11, 2'b01, 3'd2, 1'b0, 1'b0};

// ship 4 hor
assign ppu_cmds[7] = {1'b1, 7'd96, 2'b11, 2'b10, 3'd0, 1'b0, 1'b0};
assign ppu_cmds[8] = {1'b1, 7'd97, 2'b11, 2'b10, 3'd1, 1'b0, 1'b0};
assign ppu_cmds[9] = {1'b1, 7'd98, 2'b11, 2'b10, 3'd2, 1'b0, 1'b0};
assign ppu_cmds[10] = {1'b1, 7'd99, 2'b11, 2'b10, 3'd3, 1'b0, 1'b0};

// ship 5 hor
assign ppu_cmds[11] = {1'b1, 7'd0, 2'b11, 2'b11, 3'd0, 1'b0, 1'b0};
assign ppu_cmds[12] = {1'b1, 7'd1, 2'b11, 2'b11, 3'd1, 1'b0, 1'b0};
assign ppu_cmds[13] = {1'b1, 7'd2, 2'b11, 2'b11, 3'd2, 1'b0, 1'b0};
assign ppu_cmds[14] = {1'b1, 7'd3, 2'b11, 2'b11, 3'd3, 1'b0, 1'b0};
assign ppu_cmds[15] = {1'b1, 7'd4, 2'b11, 2'b11, 3'd4, 1'b0, 1'b0};

// ship 3 vert
assign ppu_cmds[16] = {1'b1, 7'd45, 2'b11, 2'b01, 3'd0, 1'b1, 1'b0};
assign ppu_cmds[17] = {1'b1, 7'd55, 2'b11, 2'b01, 3'd1, 1'b1, 1'b0};
assign ppu_cmds[18] = {1'b1, 7'd65, 2'b11, 2'b01, 3'd2, 1'b1, 1'b0};

// ship 4 vert
assign ppu_cmds[19] = {1'b1, 7'd9, 2'b11, 2'b10, 3'd0, 1'b1, 1'b0};
assign ppu_cmds[20] = {1'b1, 7'd19, 2'b11, 2'b10, 3'd1, 1'b1, 1'b0};
assign ppu_cmds[21] = {1'b1, 7'd29, 2'b11, 2'b10, 3'd2, 1'b1, 1'b0};
assign ppu_cmds[22] = {1'b1, 7'd39, 2'b11, 2'b10, 3'd3, 1'b1, 1'b0}; 

// ship 5 vert
assign ppu_cmds[23] = {1'b1, 7'd50, 2'b11, 2'b11, 3'd0, 1'b1, 1'b0};
assign ppu_cmds[24] = {1'b1, 7'd60, 2'b11, 2'b11, 3'd1, 1'b1, 1'b0};
assign ppu_cmds[25] = {1'b1, 7'd70, 2'b11, 2'b11, 3'd2, 1'b1, 1'b0};
assign ppu_cmds[26] = {1'b1, 7'd80, 2'b11, 2'b11, 3'd3, 1'b1, 1'b0};
assign ppu_cmds[27] = {1'b1, 7'd90, 2'b11, 2'b11, 3'd4, 1'b1, 1'b0};

// miss sprites 
assign ppu_cmds[28] = {1'b0, 7'd53, 2'b01, 2'b11, 3'd3, 1'b1, 1'b0}; // player board
assign ppu_cmds[29] = {1'b1, 7'd63, 2'b01, 2'b11, 3'd4, 1'b1, 1'b0}; // ship board

// hit sprites
assign ppu_cmds[30] = {1'b0, 7'd55, 2'b10, 2'b11, 3'd3, 1'b1, 1'b0}; // player board
assign ppu_cmds[31] = {1'b1, 7'd65, 2'b10, 2'b11, 3'd4, 1'b1, 1'b0}; // ship board

// select with empty
assign ppu_cmds[32] = {1'b0, 7'd69, 2'b00, 2'b11, 3'd3, 1'b1, 1'b1};

// select with miss
assign ppu_cmds[33] = {1'b0, 7'd74, 2'b01, 2'b11, 3'd3, 1'b1, 1'b1};

// select with hit
assign ppu_cmds[34] = {1'b0, 7'd76, 2'b10, 2'b11, 3'd3, 1'b1, 1'b1};
assign ppu_cmds[35] = {1'b0, 7'd76, 2'b10, 2'b11, 3'd3, 1'b1, 1'b0}; // deselect
*/

// vga_clk @ 25 MHz
vga_pll pll (.refclk(sys_clk), .rst(1'b0), .outclk_0(vga_clk));
assign VGA_CLK = vga_clk;

PPU ppu_i (
    .sys_clk(sys_clk),
    .vga_clk(vga_clk),
    .VGA_CLK(),
    .rst_n(rst_n),
    .r(VGA_R), 
    .g(VGA_G), 
    .b(VGA_B), 
    .VGA_BLANK_N(VGA_BLANK_N),
    .VGA_HS(VGA_HS),
    .VGA_SYNC_N(VGA_SYNC_N),
    .VGA_VS(VGA_VS),
    .receive(receive),
    .board(ppu_data[31]),
    .square_update(ppu_data[30:24]),
    .square_state(ppu_data[23:22]),
    .ship_type(ppu_data[21:20]),
    .ship_section(ppu_data[19:17]),
    .vert(ppu_data[16]),
    .square_sel(ppu_data[15]),
    .ai(ppu_data[14]),
    .turn(ppu_data[13:12]),
    .finish(ppu_data[11:10])
);


// PPU ppu_i (
//     .sys_clk(sys_clk),
//     .vga_clk(vga_clk),
//     .VGA_CLK(),
//     .rst_n(rst_n),
//     .r(VGA_R), 
//     .g(VGA_G), 
//     .b(VGA_B), 
//     .VGA_BLANK_N(VGA_BLANK_N),
//     .VGA_HS(VGA_HS),
//     .VGA_SYNC_N(VGA_SYNC_N),
//     .VGA_VS(VGA_VS),
//     .receive(receive),
//     .board(ppu_cmds[cmd_index][16]),
//     .square_update(ppu_cmds[cmd_index][15:9]),
//     .square_state(ppu_cmds[cmd_index][8:7]),
//     .ship_type(ppu_cmds[cmd_index][6:5]),
//     .ship_section(ppu_cmds[cmd_index][4:2]),
//     .vert(ppu_cmds[cmd_index][1]),
//     .square_sel(ppu_cmds[cmd_index][0])
// );

endmodule
